{
  "hash": "00b6c22e4ce8835c651671db7272bb2d",
  "result": {
    "markdown": "---\ntitle: \"Take Home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan\"\nauthor: \"Emily Aurelia\"\nformat:\n  html:\n    toc-depth: 4\nexecute: \n  warning: false #to remove the warning in the webpage\n  freeze: true\ndate: \"27 February 2024\"\n---\n\n\n# Background\n\nIt has been reported that Taiwan had a very high record of dengue fever cases of 26703 in the year 2023. This is the worst outbreak case since 2015, where Taiwan faced the worst dengue fever outbreak with 43,000 dengue cases and 228 deaths. It is reported that more than 80% of the cases occurred in the months fo August to November of 2023 and during the epidemiology week 31 to 50. Most of these dengue cases are reported at Tainan City.\n\n# Motivation\n\nAs there is a sudden dengue fever outbreak in Taiwan after years of having cases below 200, we need to investigate further if such an outbreak has any correlation with the region that is happening, the time that the outbreak happened, or both. This investigation can help in further understanding the cause of such an outbreak as well as a step to know how to prevent such an outbreak from happening again.\n\n# Packages\n\n-   **sf -** for importing and handling geospatial data in R\n-   **tidyverse** - for wrangling attribute data in R\n-   **sfdep -** for computing spatial weights, global and local spatial autocorrelation statistics\n-   **tmap -** prepare cartographic quality choropleth map\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sp, sfdep, tmap, tidyverse, ggplot2)\n```\n:::\n\n\n# Data\n\n## Aspatial Data\n\n-   Dengue_Daily.csv\n\n    -   This is an aspatial data of the reported dengue cases in Taiwan since 1998\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n```\n:::\n\n\n## Geospatial Data\n\n-   TAIWAN_VILLAGE_2020\n\n    -   This is a geospatial data of the village boundaries of Taiwan in the form of an ESRI shapefile format. It is already in the Taiwan Geographic Coordinate System.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\Users\\emily\\OneDrive\\Documents\\SMU\\Y3S2\\Geospatial Analysis\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial\\TAINAN_VILLAGE.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n:::\n:::\n\n\n# Data Preprocessing\n\n## Aspatial Data\n\n### Filter by Dates of the Epidemiology Week\n\nWe are only interested in the epidemiology week 31 to 50 in the year 2023, which is when most of the dengue cases are happening. There is a function from lubridate, `epiweek()`, which can give the epidemiology week of the specific year. As such, we will use `mutate()` and `epiweek()` to create a column, epiweek, to identify the epidemiology week of the dates, and then using the `filter()` function to filter the data that has the epidemiology week of 31 to 50 in the year 2023.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue |> \n  mutate(EPIWEEK = epiweek(發病日)) |> \n  filter(year(發病日) == 2023 & between(EPIWEEK, 31, 50))\n```\n:::\n\n\n### Remove Unused Columns\n\nIn this case study, we want to focus more on the locations of where the cases occur. As such, there are only 4 columns that we will require, which are:\n\n-   發病日: Onset date\n\n-   最小統計區中心點X: x-coordinate (longitude)\n\n-   最小統計區中心點Y: y-coordinate (latitude)\n\n-   epiweek: the epidemiology week of the case\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue |> \n  select(發病日, 最小統計區中心點X, 最小統計區中心點Y, EPIWEEK)\n```\n:::\n\n\n### Checking and Handling of Missing Data\n\nLet us now check for rows that contains any missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(dengue))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           發病日 最小統計區中心點X 最小統計區中心點Y           EPIWEEK \n                0                 0                 0                 0 \n```\n:::\n:::\n\n\nFrom the output above, we can see that there are 0 rows that contains missing coordinates. However, we need to see if there are rows that contains any \"None\" strings.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_None <- dengue |> \n  filter(最小統計區中心點X == \"None\" | 最小統計區中心點Y == \"None\")\nglimpse(dengue_None)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 14\nColumns: 4\n$ 發病日            <date> 2023-08-18, 2023-08-24, 2023-09-15, 2023-09-15, 202…\n$ 最小統計區中心點X <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"Non…\n$ 最小統計區中心點Y <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"Non…\n$ EPIWEEK           <dbl> 33, 34, 37, 37, 38, 38, 39, 39, 39, 42, 42, 43, 43, …\n```\n:::\n:::\n\n\nIt is shown that there are a total of 14 rows that have missing coordinates. This is a very small portion of the dataset. As such, let us just remove the 14 rows from the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue |> \n  filter(最小統計區中心點X != \"None\" | 最小統計區中心點Y != \"None\")\n```\n:::\n\n\n### Change the Data Type of the x and y coordinates\n\nWhen we look at the `glimpse()` of the dengue dataframe, the type of data for the x and y coordinates are \\<chr\\>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 25,461\nColumns: 4\n$ 發病日            <date> 2023-07-30, 2023-07-30, 2023-07-30, 2023-07-30, 202…\n$ 最小統計區中心點X <chr> \"120.220182286\", \"120.218036763\", \"120.235449178\", \"…\n$ 最小統計區中心點Y <chr> \"22.976075790\", \"22.980068070\", \"23.013736726\", \"23.…\n$ EPIWEEK           <dbl> 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, …\n```\n:::\n:::\n\n\nAs such, we need to change these columns into a numerical type or \\<dbl\\> using the `mutate_at()` and `as.numeric()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue |> \n  mutate_at(c('最小統計區中心點X', '最小統計區中心點Y'),as.numeric)\nglimpse(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 25,461\nColumns: 4\n$ 發病日            <date> 2023-07-30, 2023-07-30, 2023-07-30, 2023-07-30, 202…\n$ 最小統計區中心點X <dbl> 120.2202, 120.2180, 120.2354, 120.2456, 120.2465, 12…\n$ 最小統計區中心點Y <dbl> 22.97608, 22.98007, 23.01374, 23.01932, 23.01821, 23…\n$ EPIWEEK           <dbl> 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, …\n```\n:::\n:::\n\n\n### Change the Dengue Dataset into sf\n\nTo know where the coordinate of the dengue cases lies on the map, we need to change the dengue dataset into a sf object to get the point data of each dengue case. However, we need to ensure that the projection system of the Tainan geospatial data and the dengue dataset are the same. As such, let us take a look at the projection system that is used by the Tainan dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(tainan)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: TWD97 \n  wkt:\nGEOGCRS[\"TWD97\",\n    DATUM[\"Taiwan Datum 1997\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.\"],\n        BBOX[17.36,114.32,26.96,123.61]],\n    ID[\"EPSG\",3824]]\n```\n:::\n:::\n\n\nNow we know that the Tainan geospatial data is set on the TWD97 with EPSG:3824. So, let's use `st_as_sf()` function to change the dengue dataset into a sf object and use `st_transform()` to change the projection to EPSG:3824.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_sf <- st_as_sf(dengue,\n                        coords = c(\"最小統計區中心點X\", \"最小統計區中心點Y\"),\n                        crs = 4326) |>\n  st_transform(crs = 3824)\nst_crs(dengue_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: EPSG:3824 \n  wkt:\nGEOGCRS[\"TWD97\",\n    DATUM[\"Taiwan Datum 1997\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.\"],\n        BBOX[17.36,114.32,26.96,123.61]],\n    ID[\"EPSG\",3824]]\n```\n:::\n:::\n\n\n## Geospatial Data\n\n### Inspect and Narrow Down the Area of Focus\n\nFirst, let's see what the Tainan dataset looks like.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nqtm(tainan)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe plot shows the map of the whole Tainan City. However, we want to focus more on the villages and are confined to the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan <- tainan |> \n  filter(TOWNID %in% c('D01', 'D02', 'D04', 'D06', 'D07', 'D08', 'D32', 'D39'))\nqtm(tainan)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(tainan) +\n  tm_fill(col=\"TOWNID\") +\n  tm_borders()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n### Setting the Boundaries\n\nNow we have gotten the villages that we want. It is time for us to set the big area boundary to be able to find the dengue cases that are within the area of interest.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_sf <- st_union(tainan)\nplot(tainan_sf)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Combining Aspatial Data and Geospatial Data\n\n### Find Dengue Cases within the Focus Area\n\nUpon further investigation, the data points of the dengue dataset lies all around Taiwan. As such, we need to narrow down the data points into the counties that we have selected.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_vill_sf <- st_intersection(dengue_sf, tainan)\nglimpse(dengue_vill_sf)\n\nsaveRDS(dengue_vill_sf, file = \"rds/dengue_vill_sf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_vill_sf <- readRDS(\"rds/dengue_vill_sf.rds\")\n```\n:::\n\n\n# Exploratory Data Analysis\n\nBefore diving further into finding the global and local spatial autocorrelation, let us take a further look on the distribution of the dengue cases.\n\n## Plot time series graph on the cases\n\nSince this is a time-series data and we want to know further about the cases that happened over the course of the year, let us plot the time-series graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_time <- dengue |> \n  group_by(發病日) |> \n  summarise(n = n())\nglimpse(dengue_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 140\nColumns: 2\n$ 發病日 <date> 2023-07-30, 2023-07-31, 2023-08-01, 2023-08-02, 2023-08-03, 20…\n$ n      <int> 23, 42, 45, 45, 49, 49, 58, 65, 77, 69, 67, 56, 79, 72, 71, 74,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dengue_time, aes(x = 發病日, y = n)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nAs we can see in the graph, the dengue cases mostly happen between September to mid-November, with it's peak in October. This may be due to the rainy season in October, such that there are plenty of spaces for the Aides aegypti mosquitos to breed. We will further inspect whether the dengue cases is dependent on time.\n\n## Plot heat map on the graph to see the area that is concentrated on having the dengue cases\n\nNext, let take a look at the distribution of the location where the dengue cases are happening. We can plot the points of the cases in the Tainan map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(tainan_sf) +\n  tm_fill() +\n  tm_borders() +\n  tm_shape(dengue_vill_sf) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nAs we can see from the plot above, most of the cases are happening in the central of map, meaning that the spread of the dengue cases may be location-based.\n\nFrom the two speculations made above, let us further analyse whether there are any spatial and spatio-temporal relationship of the dengue cases.\n\n\n# Global Measures of Spatial Autocorrelation\n\nFirst of all, before we start with the global spatial autocorrelation, we need to find the number of dengue cases in each village.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_village <- st_join(tainan, dengue_sf) |> \n  group_by(VILLCODE) |> \n  summarise(num_cases = n())\n```\n:::\n\n\n## Computing Continguity Spatial Weights and create row-standardised weights matrix\n\nAfter finding the number of cases in each village, we need to compute the spatial weights matrix. We will use the `st_contiguity()` function to compute the contiguity spatial weights and the `st_weights()` function to create the row-standardised weights matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- dengue_village |> \n  mutate(nb = st_contiguity(geometry), \n         wt = st_weights(nb,\n                         style = \"W\"), \n        .before = 1)\n```\n:::\n\n\nWith the spatial weights matrix, we can now compute the global spatial autocorrelation statistics.\n\n## Moran's I\n\n### Moran's I test\n\nNow, let's compute the Moran's I using the `global_moran()` function from the `sfdep` package. We will use the `num_cases` as the attribute data, `nb` as the spatial weights matrix, and `wt` as the row-standardised weights matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran <- global_moran_test(wm_q$num_cases,\n                  wm_q$nb,\n                  wm_q$wt)\nmoran\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.867, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.468299777      -0.003891051       0.001346736 \n```\n:::\n:::\n\nAs we can see from the result, the Moran's I value is 0.46830, which is positive, and a very small p-value, which is lower than 2.2e-16. This means that there is a positive spatial correlation between the dengue cases in the villages in Tainan City. Moreover, the expectation of the Moran I statistic when there is no spatial correlation is lower than the Moran I statistic, indicating that there is spatial clustering. However, this is only one test that we did, such that this result might be random and not a representative of the actual spatial autocorrelation. As such, we need to do a Monte Carlo simulation to test the significance of the Moran's I value.\n\n### Monte Carlo Moran's I\n\nNow, let's compute the Moran's I using the `global_moran_perm()` function from the `sfdep` package. We will set a number of 999 for the number of simulations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(19)\nmperm <- global_moran_perm(wm_q$num_cases,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 999)\nmperm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.4683, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n:::\n:::\n\nFrom the result above, we can see that the statistic value is equal to the first test that we did and it is ranked as the 1000 observed values. This means that the observation has the highest Moran I value from the 999 randomly simulated observations. The very low p-value of 2.2e-16 also signifies that our previous claim is justified, that there is a positive spatial autocorrelation for the dengue cases in the villages of Tainan City.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mperm$res, \n     freq=TRUE, \n     breaks=30, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n# Local Spatial Autocorrelation\n\nFrom the Gloval Spatial Autocorrelation analysis using Moran's I, we know that there is a positive spatial autocorrelation for the dengue cases and there are clustering. Now, using the local spatial autocorrelation, we can further investigate which villages are the hotspots and which are the coldspots. \n\n## Computing Distance Matrix\n\nSimilar to Global Spatial Autocorrelation, we need to compute the weights matrix, but this time, we use the distance. We will use the `st_inverse_distance()` function from the `sfdep` package to compute the inverse distance weights. It computes the inverse of the distance between the centroids of the villages, such that villages that are closer together are assumed to be more likely to have similar number of dengue cases, giving them higher weights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncent_coords <- st_centroid(dengue_village$geometry) |>\n  st_coordinates() |> \n  as_tibble()\n\nwm_q <- dengue_village |>\n  mutate(nb = st_contiguity(geometry),\n         wt = st_inverse_distance(nb, cent_coords,\n                                  scale = 1),\n         .before = 1)\n```\n:::\n\n## Computing Local Getis-Ord Gi\\*\n\nNow, let's compute the local Getis-Ord Gi\\* statistic using the `local_gstar_perm()` function from the `sfdep` package. We will use the distance matrix found in the previous part and set the number of simulations to 999 to find the significance of the local Gi\\* statistic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa <- wm_q |> \n  mutate(local_gi = local_gstar_perm(\n    num_cases, nb, wt, nsim=999),\n    .before = 1) |> \n  unnest(local_gi) |>\n  select(gi_star, p_sim, VILLCODE, num_cases) |>\n  mutate(p_sim = replace(p_sim, p_sim > 0.05, NA),\n         gi_star = ifelse(is.na(p_sim), NA, gi_star))\n```\n:::\n\n\n## Visualizing the Local Getis-Ord Gi\\*\n\nNow, let's visualize the local Getis-Ord Gi\\* statistic using the `tm_shape()` and `tm_fill()` functions from the `tmap` package. We will use the `gi_star` as the attribute data and the `p_sim` as the significance level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(hcsa) +\n  tm_polygons(\"gi_star\", \n              palette = \"-RdYlBu\",\n              style = \"cont\",\n              title = \"Local Getis-Ord Gi*\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nAs seen from the plot above, the red areas are the hotspots, meaning that the number of dengue cases in the village is high, and so are the surrounding villages. On the other hand, the blue areas indicate villages that have low dengue cases and is surrounded by villages that also have low dengue cases. \n\nWe can also see that most of the coldspots are situated on the outer part of the city, away from the city center. This might be because there are fewer people living in these parts of the city with greater land area, such that the mosquitos have fewer hosts to bite and breed. On the other hand, the hotspots are situated near the city center, where there are more people living in a smaller land area, such that the mosquitos have more hosts to bite and breed. However, it is surprising that the city center itself is not a hotspot. This might be due to the fact that the city center is more developed and has better infrastructure, especially good drainage systems, such that the mosquitos have fewer places to breed.\n\n\n# Emerging Hotspot Analysis\n\n## Data Preparation\n\n### Create empty dataframe\n\nWe need to create an empty dataframe containing all the possible combinations of the village code and the epidemiology week. This is so that the dimension of our dataframe will suit the criterias for a spacetime cube.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvill_code_unique <- unique(tainan$VILLCODE)\nepiwk_unique <- unique(dengue$EPIWEEK)\ndengue_empty <- expand.grid(VILLCODE = vill_code_unique, EPIWEEK = epiwk_unique) |> \n  mutate(VILLCODE = as.character(VILLCODE))\n```\n:::\n\n\n### Combine the sf objects to find cases in each village\n\nWe then filter the dengue cases by using the `st_join()` function from the `sf` package to make sure that all the cases are located within our interested boundery. We will use the `st_contains` as the join argument to find the cases that are within the area of interest.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_vill <- st_join(tainan, dengue_sf, join=st_contains)\n\ndengue_vill_summ <- dengue_vill |> \n  group_by(VILLNAME, VILLCODE, TOWNID, EPIWEEK) |> \n  summarise(num_cases = n())\n\nsaveRDS(dengue_vill, \"rds/dengue_vill.rds\")\nsaveRDS(dengue_vill_summ, \"rds/dengue_vill_summ.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_vill <- readRDS(\"rds/dengue_vill.rds\")\ndengue_vill_summ <- readRDS(\"rds/dengue_vill_summ.rds\")\n```\n:::\n\n\n### Create dataframe to compile all the number of cases in each village per week\n\nNext, we use 'left_join()' to join the empty dataframe with the dengue cases dataframe. Then, we use 'mutate()' to replace the NA values with 0.\n\nWe also drop the geometry column from the dengue_vill_summ dataframe as we only require the attribute data to make the dengue data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df <- st_drop_geometry(dengue_vill_summ)\n\ndengue_df <- left_join(dengue_empty, dengue_df, by=c(\"VILLCODE\" = \"VILLCODE\", \"EPIWEEK\" = \"EPIWEEK\"))\n\ndengue_df <- dengue_df |> \n  select(VILLCODE, VILLNAME, TOWNID, EPIWEEK, num_cases) |>\n  mutate(num_cases = replace_na(num_cases, 0))\n\ntainan_village <- tainan |> \n  st_drop_geometry() |> \n  select(VILLCODE, VILLNAME, TOWNID)\n\ndengue_df <- rows_patch(dengue_df, tainan_village, by=c(\"VILLCODE\"))\n```\n:::\n\n\n### Create spacetime object\n\nTo create the spacetime object, we use the `spacetime()` function from the `sfdep` package. We will use the `dengue_df` as the data, `tainan` as the geometry, `VILLCODE` as the location column, and `EPIWEEK` as the time column. We also need to make sure that the location and time columns are inside the dataframe and the geometry dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_st <- spacetime(\n  .data = dengue_df, \n  .geometry = tainan, \n  .loc_col = \"VILLCODE\", \n  .time_col = \"EPIWEEK\"\n)\n```\n:::\n\n\n### Activate the spacetime object into data\n\nTo see what the spacetime object is like and what it contains, we can activate the spactime object into data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactivate(dengue_st, \"data\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dengue_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,160\nColumns: 5\n$ VILLCODE  <chr> \"67000350032\", \"67000270011\", \"67000370005\", \"67000330004\", …\n$ VILLNAME  <chr> \"青草里\", \"保安里\", \"赤嵌里\", \"大成里\", \"城北里\", \"城南里\", …\n$ TOWNID    <chr> \"D06\", \"D32\", \"D08\", \"D02\", \"D06\", \"D06\", \"D08\", \"D06\", \"D06…\n$ EPIWEEK   <dbl> 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, …\n$ num_cases <int> 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 34, 2,…\n```\n:::\n:::\n\n\n## Emerging Hotspot Analysis\n\n### Check for time-series cube\n\nBefore we can do the emerging hotspot analysis, we need to check if the spacetime object is a spacetime cube.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(dengue_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n### Computing Spatial Weights\n\nNow, we compute the spatial weights using the `st_contiguity()` function from the `sfdep` package. We will use the `include_self()` function to include itself in the spatial weights, and the `st_inverse_distance()` function to compute the inverse distance weights, as we assume that the neighbouring areas are more similar to each other.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_center <- st_centroid(dengue_village$geometry) |> \n  st_coordinates() |> \n  as_tibble()\n\ndengue_nb <- dengue_st |>\n  activate(\"geometry\") |>\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, coords_center,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) |>  \n  set_wts(\"wt\") |>\n  set_nbs(\"nb\")\n```\n:::\n\n\n### Computing local Gi\\*\n\nNext, we compute the local Gi\\* for each week using the `local_gstar_perm()` function from the `sfdep` package.  We will also set the number of simulations to 999.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_star_ehsa <- dengue_nb |> \n  group_by(EPIWEEK) |>\n  mutate(gi_star = local_gstar_perm(\n    num_cases, nb, wt, nsim=999),\n    .before = 1) |> \n  unnest(gi_star)\n```\n:::\n\n\n### Mann-Kendall Test\n\nWe then use the Mann-Kendall test to check for the monotonic trend in the series. However, we need to define the null and alternative hypothesis first and set the significance level. \n\n-   H0: There is no monotonic trend in the series\n\n-   H1: A trend exists, can be positive, negative, or non-null\n\n-   Significance level: 0.05\n\n### Selecting Study Area\n\nFor this analysis, we will focus on selecting 3 villages from different TOWNID to see the different trends across the area of interest.\n\nFirst, we select the top 5 Towns with the highest number of cases in the first, middle, and last week of the timeframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 31) |>\n  group_by(TOWNID) |>\n  summarise(tot_cases = sum(num_cases)) |>\n  top_n(5, tot_cases) |>\n  arrange(desc(tot_cases)) |>\n  pull(TOWNID)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"D39\" \"D01\" \"D06\" \"D32\" \"D04\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |>\n  filter(EPIWEEK == 40) |> \n  group_by(TOWNID) |>\n  summarise(tot_cases = sum(num_cases)) |>\n  top_n(5, `tot_cases`) |>\n  arrange(desc(`tot_cases`)) |>\n  pull(TOWNID)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"D01\" \"D02\" \"D04\" \"D06\" \"D39\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 47) |> \n  group_by(TOWNID) |>\n  summarise(tot_cases = sum(num_cases)) |>\n  top_n(5, `tot_cases`) |>\n  arrange(desc(`tot_cases`)) |>\n  pull(TOWNID)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"D01\" \"D04\" \"D39\" \"D02\" \"D32\"\n```\n:::\n:::\n\n\nWe can see that the cases in towns D39, D04, and D01 are the highest in the first, middle, and last week of the timeframe. \n\nSo, let's us take a look closer on the villages that are within the towns D39, D04, and D01.\n\n::: panel-tabset\n\n## D39\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 31 & TOWNID == \"D39\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"五王里\" \"勝利里\" \"二王里\" \"復華里\" \"崑山里\" \"東橋里\" \"三合里\" \"六合里\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 40 & TOWNID == \"D39\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"復華里\" \"勝利里\" \"二王里\" \"中華里\" \"六合里\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 50 & TOWNID == \"D39\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"東橋里\" \"西灣里\" \"三合里\" \"二王里\" \"塩行里\" \"塩興里\"\n```\n:::\n:::\n\nWe can see here that the number of cases in the 二王里 village of D39 keeps being in the top 5 most number of dengue cases. So, we are interested in finding more on the trend of the dengue cases for this village.\n\n## D04\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 31 & TOWNID == \"D04\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"公園里\" \"成德里\" \"大豐里\" \"北門里\" \"元寶里\" \"合興里\" \"振興里\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 40 & TOWNID == \"D04\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"大港里\" \"大豐里\" \"北門里\" \"大和里\" \"大興里\" \"小北里\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 50 & TOWNID == \"D04\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"公園里\" \"北門里\" \"中樓里\" \"正覺里\" \"小北里\" \"力行里\" \"開元里\" \"振興里\"\n[9] \"文元里\"\n```\n:::\n:::\n\nThe village 北門里 of D04 is the only village that keeps being in the top 5 most number of dengue cases. As such, we want to know more about the trend of the dengue cases happening in this village.\n\n## D01\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 31 & TOWNID == \"D01\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"崇學里\" \"德光里\" \"崇德里\" \"大智里\" \"崇善里\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 40 & TOWNID == \"D01\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"自強里\" \"東明里\" \"新東里\" \"莊敬里\" \"裕農里\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df |> \n  filter(EPIWEEK == 50 & TOWNID == \"D01\") |> \n  top_n(5, `num_cases`) |>\n  arrange(desc(`num_cases`)) |>\n  pull(VILLNAME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"富強里\" \"裕聖里\" \"關聖里\" \"大智里\" \"崇文里\" \"崇成里\" \"崇明里\" \"大福里\"\n [9] \"崇德里\" \"大德里\" \"崇學里\" \"和平里\" \"崇善里\" \"路東里\" \"虎尾里\" \"忠孝里\"\n[17] \"崇信里\" \"德光里\" \"復興里\" \"自強里\" \"文聖里\" \"富裕里\" \"龍山里\" \"新東里\"\n[25] \"泉南里\" \"東聖里\" \"東安里\" \"大同里\" \"衛國里\" \"裕農里\" \"南聖里\" \"崇誨里\"\n[33] \"東門里\" \"中西里\" \"東明里\" \"圍下里\" \"東光里\" \"後甲里\" \"莊敬里\" \"小東里\"\n[41] \"大學里\" \"成大里\" \"德高里\" \"仁和里\" \"東智里\"\n```\n:::\n:::\n\nThere are no village that always appear in top 5. However, the village 大智里 of D01 appears in the beginning and at the end, while disappearing in the middle. It is interesting to see how the number of cases changes over the course of the timeframe for this village.\n:::\n\nFrom the list of villages above, we then choose one village that reflects a similar trend to the number of cases in each town. We will also plot the time series graph of the number of cases in the village and perform the Mann-Kendall test.\n\n::: panel-tabset\n         \n## 二王里 of D39\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nerwang_ehsa <- gi_star_ehsa |> \n  ungroup() |>\n  filter(VILLNAME == \"二王里\") |> \n  select(VILLNAME, EPIWEEK, gi_star)\n\nggplot(data = erwang_ehsa, \n       aes(x = EPIWEEK, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n\n```{.r .cell-code}\nerwang_ehsa |>\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) |> \n  unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n     tau       sl     S     D  varS\n   <dbl>    <dbl> <dbl> <dbl> <dbl>\n1 -0.621 0.000147  -118  190.   950\n```\n:::\n:::\n\n\n       \n## 北門里 of D04\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeimen_ehsa <- gi_star_ehsa |>\n  ungroup() |>\n  filter(VILLNAME == \"北門里\") |> \n  select(VILLNAME, EPIWEEK, gi_star)\n\nggplot(data = beimen_ehsa, \n       aes(x = EPIWEEK, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbeimen_ehsa |>\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) |> \n  unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n1 0.0947 0.581    18  190.   950\n```\n:::\n:::\n\n\n\n## 大智里 of D01\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndazhi_ehsa <- gi_star_ehsa |>\n  ungroup() |>\n  filter(VILLNAME == \"大智里\") |> \n  select(VILLNAME, EPIWEEK, gi_star)\n\nggplot(data = dazhi_ehsa, \n       aes(x = EPIWEEK, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndazhi_ehsa |>\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) |> \n  unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n1 -0.200 0.230   -38  190.   950\n```\n:::\n:::\n\n\n:::\n\n##### Analysis\n\n-   二王里 of D39: From the time-series graph, we can see that the number of cases across the weeks decreases. The Mann-Kendall test also shows that there is a significant decreasing trend in the number of cases. As such, we can reject the null hypothesis that there is no monotonic trend in the series and conclude that the rate of dengue cases happening per week decreases over time.\n\n-   北門里 of D04: From the time-series graph, we can see that the number of cases are at a constant high until the end. From the result of the Mann-Kendall test, we can see that there is no significant trend in the number of cases. As such, we cannot reject the null hypothesis and conclude that there is no monotonic trend in the series. This means that the rate of dengue cases happening per week fluctuates and there is no trend in the number of dengue cases.\n\n-   大智里 of D01: From the time-series graph, we can see that the number of cases decreases in the beginning but increases towards the end. True as what the Mann-Kendall test shows, that there is no significant trend in the number of cases. As such, we cannot reject the null hypothesis and conclude that there is no monotonic trend in the series. This means that the number of dengue cases fluctuates from time to time.\n\n### EHSA for all the villages\n\nNow, let us do the emerging hotspot analysis for all the villages in Tainan City using the `emerging_hostpost_analysis()` function from `sfdep` package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(19)\nehsa <- emerging_hotspot_analysis(x = dengue_st, \n                                  .var = \"num_cases\", \n                                  k = 1, nsim = 99)\nsaveRDS(ehsa, \"rds/ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- readRDS(\"rds/ehsa.rds\")\ncount(ehsa, classification)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        classification   n\n1 consecutive coldspot   5\n2  consecutive hotspot   7\n3          new hotspot   3\n4  no pattern detected   6\n5  oscilating coldspot  53\n6   oscilating hotspot 110\n7  persistent coldspot   6\n8    sporadic coldspot  36\n9     sporadic hotspot  32\n```\n:::\n:::\n\n\nThe count table shows how many villages are in each classification. We can see that there are 5 villages that are persistent coldspots, 109 villages in the oscilating hotspot, and 1 village as a new coldspot.\n\n### Plot the result of emerging hotspot analysis\n\nLet us see the distribution of the different classifications of the villages in Tainan City.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar(fill=\"light blue\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\nTo see the locations of the different classifications of the villages, we will plot the map of Tainan City and overlay the emerging hotspot analysis result on the map.\n\nFirst, we need to combine the emerging hotspot analysis result with the Tainan geospatial data using the `left_join()` function from the `dplyr` package. We also need to remove the insignificant rows by replacing the rows that has p-value more than 0.05 with NA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_ehsa <- left_join(ehsa, tainan, by=c('location'='VILLCODE')) |> \n  mutate(`p_value` = replace(`p_value`, `p_value` > 0.05, NA), \n         `classification` = ifelse(is.na(`p_value`), NA, `classification`))\n```\n:::\n\n\nSince the above dataset is still in a dataframe format, we need to change it into a sf object using the `st_as_sf()` function from the `sf` package to be able to plot it using the tmap package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_ehsa_sf <- tainan_ehsa |> \n  select(location, tau, p_value, classification, geometry)\n\nehsa_sf <- st_as_sf(tainan_ehsa_sf)\n\ntmap_mode(\"plot\")\ntm_shape(ehsa_sf) +\n  tm_fill(col=\"classification\", palette=\"Paired\") +\n  tm_borders()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\nFrom the map above, we can see that most of the villages are oscillating hotspot, meaning that they are statistically significant hotspot at the end of the timeframe although they are statistically significant coldspot at the beginning of the timeframe. Most of these villages are located on the D06 town. This might be because as more mosquitoes breed, the range of reach for these mosquitoes widen, especially to the more rural part of the city.  \n\nIn conclusion, based on the analysis, we can say that the dengue cases in Tainan City are spatially and spatio-temporally correlated. As seen from the HCSA, there are hotspot and coldspot clusters identified. Moreover, the ESHA shows that though the number of cases in many of the village fluctuates we can still see a trend to the number of dengue cases happening in each village. ",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}